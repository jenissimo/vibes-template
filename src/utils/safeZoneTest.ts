/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è safe zone
 */

import { readSafeInsets, computeLayout, enableLayoutDebug } from '@/engine/render';

import { logger } from '@/engine/logging';
export function testSafeZone(): void {
  logger.info('üß™ Testing Safe Zone...', { source: 'game' });
  
  // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–µ insets
  const insets = readSafeInsets();
  logger.info('üìê Current insets:', { insets, source: 'game' });
  
  // –í—ã—á–∏—Å–ª—è–µ–º layout
  const layout = computeLayout(window.innerWidth, window.innerHeight, insets);
  logger.info('üìê Current layout:', { layout, source: 'game' });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ª–∏ CSS env() –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  const testElement = document.createElement('div');
  testElement.style.paddingTop = 'env(safe-area-inset-top, 0px)';
  document.body.appendChild(testElement);
  
  const computedStyle = getComputedStyle(testElement);
  const paddingTop = computedStyle.paddingTop;
  logger.info('üìê CSS env() test - paddingTop:', { paddingTop, source: 'game' });
  
  document.body.removeChild(testElement);
  
  // –í–∫–ª—é—á–∞–µ–º debug overlay
  enableLayoutDebug();
  
  logger.info('‚úÖ Safe zone test completed. Check the debug overlay on screen.', { source: 'game' });
}

// –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
(window as any).testSafeZone = testSafeZone;
