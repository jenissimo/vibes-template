// @ts-ignore - spectorjs –Ω–µ –∏–º–µ–µ—Ç —Ç–∏–ø–æ–≤
import { Spector } from 'spectorjs';
import { eventBus } from '@/engine/events/EventBus';

/**
 * Spector.js WebGL debugger utility
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å WebGL –≤—ã–∑–æ–≤—ã
 */
export class SpectorDebugger {
  private spector: Spector | null = null;
  private isEnabled = false;

  constructor() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ
    if (import.meta.env.DEV) {
      this.initialize();
    }
  }

  private initialize(): void {
    try {
      this.spector = new Spector();
      // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é UI - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–æ—é –º–æ–±–∏–ª—å–Ω—É—é –ø–∞–Ω–µ–ª—å
      // this.spector.displayUI();
      console.log('üéÆ Spector.js initialized for WebGL debugging (custom UI)');
    } catch (error) {
      console.warn('Failed to initialize Spector.js:', error);
    }
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∑–∞–ø–∏—Å—å WebGL –∫–æ–º–∞–Ω–¥
   */
  public toggleRecording(): void {
    if (!this.spector) {
      console.warn('Spector.js not initialized');
      return;
    }

    if (this.isEnabled) {
      this.spector.stopCapture();
      this.isEnabled = false;
      console.log('üî¥ Spector recording stopped');
    } else {
      this.spector.startCapture();
      this.isEnabled = true;
      console.log('üü¢ Spector recording started');
    }
  }

  /**
   * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –∫–∞–¥—Ä WebGL –∫–æ–º–∞–Ω–¥
   */
  public captureFrame(): void {
    if (!this.spector) {
      console.warn('Spector.js not initialized');
      return;
    }

    this.spector.captureCanvas(document.getElementById('pixi-canvas') as HTMLCanvasElement);
    console.log('üì∏ Spector frame captured');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –∑–∞–ø–∏—Å—å
   */
  public isRecording(): boolean {
    return this.isEnabled;
  }

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   */
  public addHotkeys(): void {
    if (!this.spector) return;

    eventBus.on('keydown', (event) => {
      // Ctrl+Shift+R - toggle recording
      if (event.ctrlKey && event.shiftKey && event.key === 'R') {
        event.preventDefault();
        this.toggleRecording();
      }
      
      // Ctrl+Shift+C - capture frame
      if (event.ctrlKey && event.shiftKey && event.key === 'C') {
        event.preventDefault();
        this.captureFrame();
      }
    });

    console.log('‚å®Ô∏è Spector hotkeys added:');
    console.log('  Ctrl+Shift+R - Toggle recording');
    console.log('  Ctrl+Shift+C - Capture frame');
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const spectorDebugger = new SpectorDebugger();
