import * as PIXI from 'pixi.js';
import { logger } from '@/engine/logging';
import { AssetLoader } from '@/engine/assets/loaders/AssetLoader';
import { SVG_PATHS } from '@/assets/svg';
import vibesSpriteUrl from '@/assets/sprites/vibes.png';
import { ITEM_ICON_URLS } from '@/assets/icons';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã —Ä–µ—Å—É—Ä—Å–æ–≤.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π AssetLoader –∏–∑ –¥–≤–∏–∂–∫–∞.
 */
export class GameAssetService {
  public assetLoader: AssetLoader;

  constructor(assetLoader: AssetLoader) {
    this.assetLoader = assetLoader;
  }

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∏–≥—Ä–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤.
   */
  public async registerAssets(): Promise<void> {
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º SVG —Å–ø—Ä–∞–π—Ç
    this.assetLoader.registerTextureGroup(SVG_PATHS, (key) => `svg-${key}`);
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Å–ø—Ä–∞–π—Ç—ã
    await this.registerSprites();
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º PNG –∏–∫–æ–Ω–∫–∏ –∏–∑ –ø–∞–ø–∫–∏ icons/
    await this.registerItemIcons();
    
    logger.info('üìã GameAssetService: –∏–≥—Ä–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã', { source: 'game' });
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–≤—ã—Ö —Ç–µ–∫—Å—Ç—É—Ä.
   */
  public async loadTextures(): Promise<void> {
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º SVG —Å–ø—Ä–∞–π—Ç
      await this.assetLoader.loadTextureGroup(SVG_PATHS, (key) => `svg-${key}`);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å–ø—Ä–∞–π—Ç—ã
      await this.loadSprites();

      // –ó–∞–≥—Ä—É–∂–∞–µ–º PNG –∏–∫–æ–Ω–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      await this.loadItemIcons();
      
      logger.info('‚úÖ GameAssetService: –≤—Å–µ –∏–≥—Ä–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!', { source: 'game' });
    } catch (error) {
      logger.error('‚ùå GameAssetService: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—Å—Ç—É—Ä:', error as Error, { source: 'game' });
      throw error;
    }
  }

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ø—Ä–∞–π—Ç–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ sprites/
   */
  private async registerSprites(): Promise<void> {
    // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø—Ä–∞–π—Ç–æ–≤
    const sprites = [
      { name: 'vibes', url: vibesSpriteUrl }
    ];
    
    for (const sprite of sprites) {
      PIXI.Assets.add({ alias: `sprite-${sprite.name}`, src: sprite.url });
    }
    
    logger.info('üìã GameAssetService: —Å–ø—Ä–∞–π—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã', { 
      count: sprites.length,
      sprites: sprites.map(s => s.name),
      source: 'game' 
    });
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å–ø—Ä–∞–π—Ç–æ–≤
   */
  private async loadSprites(): Promise<void> {
    const sprites = ['vibes'];
    
    for (const spriteName of sprites) {
      await this.assetLoader.loadTexture(`sprite-${spriteName}`);
    }
  }

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è PNG –∏–∫–æ–Ω–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
   */
  private async registerItemIcons(): Promise<void> {
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –∏–∑ ITEM_ICON_URLS
    for (const [filename, url] of Object.entries(ITEM_ICON_URLS)) {
      const iconName = filename.replace('.png', '');
      PIXI.Assets.add({ alias: `item-${iconName}`, src: url });
    }
    
    logger.info('üìã GameAssetService: PNG –∏–∫–æ–Ω–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã', { 
      count: Object.keys(ITEM_ICON_URLS).length,
      icons: Object.keys(ITEM_ICON_URLS),
      source: 'game' 
    });
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ PNG –∏–∫–æ–Ω–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
   */
  private async loadItemIcons(): Promise<void> {
    for (const filename of Object.keys(ITEM_ICON_URLS)) {
      const iconName = filename.replace('.png', '');
      await this.assetLoader.loadTexture(`item-${iconName}`);
    }
  }
}
