/**
 * Main balance importer entry point
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∏–º–ø–æ—Ä—Ç–µ—Ä–∞ –±–∞–ª–∞–Ω—Å–∞
 */

import { config } from './config';
import { fetchAllSheetsData, validateSpreadsheet } from './google';
import { parseSheetData, validateData, validationSchemas } from './parser';
import { generateTsFile, generateIndexFile, generateReadme, generateConfigType } from './generator';
import fs from 'fs';
import path from 'path';

async function main() {
  console.log('üöÄ --- –ó–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–µ—Ä–∞ –±–∞–ª–∞–Ω—Å–∞ Idle Neon Miner ---');
  console.log(`üìä –¢–∞–±–ª–∏—Ü–∞: ${config.spreadsheetId}`);
  console.log(`üìÅ –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${config.outputDir}`);
  console.log('');

  try {
    // 1. –û—á–∏—â–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...');
    if (fs.existsSync(config.outputDir)) {
      const files = fs.readdirSync(config.outputDir);
      for (const file of files) {
        fs.unlinkSync(path.join(config.outputDir, file));
      }
    } else {
      fs.mkdirSync(config.outputDir, { recursive: true });
    }
    console.log('‚úÖ –í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞\n');

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—ã...');
    const isAccessible = await validateSpreadsheet(config.spreadsheetId!);
    if (!isAccessible) {
      throw new Error('–¢–∞–±–ª–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID —Ç–∞–±–ª–∏—Ü—ã –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.');
    }
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞\n');

    // 3. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤
    console.log('üöÄ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤...');
    const sheetNames = config.sheets.map(sheet => sheet.sheetName);
    const allSheetsData = await fetchAllSheetsData(config.spreadsheetId!, sheetNames);
    console.log('');

    // 4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ª–∏—Å—Ç (—Ç–µ–ø–µ—Ä—å –¥–∞–Ω–Ω—ã–µ —É–∂–µ –≤ –ø–∞–º—è—Ç–∏)
    for (const sheetConfig of config.sheets) {
      try {
        console.log(`üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—Å—Ç–∞: "${sheetConfig.sheetName}"`);
        
        // –ü–æ–ª—É—á–∞–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const rawData = allSheetsData[sheetConfig.sheetName];
        if (!rawData) {
          throw new Error(`–î–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—Å—Ç–∞ "${sheetConfig.sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
        }
        
        // –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
        const parsedData = parseSheetData(rawData);
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å —Å—Ö–µ–º–∞)
        const schema = validationSchemas[sheetConfig.outputFile as keyof typeof validationSchemas];
        const validatedData = schema ? validateData(parsedData, schema, sheetConfig.sheetName) : parsedData;
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞
        generateTsFile(sheetConfig, validatedData as Record<string, any>[], config.outputDir);
        
        console.log(`‚úÖ –õ–∏—Å—Ç "${sheetConfig.sheetName}" –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ\n`);
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ª–∏—Å—Ç–∞ "${sheetConfig.sheetName}":`);
        console.error(error);
        console.log('');
        
        // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ
        process.exit(1);
      }
    }

    // 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    console.log('üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');
    generateConfigType(config.outputDir, config.sheets);
    generateIndexFile(config.outputDir, config.sheets);
    generateReadme(config.outputDir, config.sheets);
    
    console.log('');
    console.log('üéâ --- –ò–º–ø–æ—Ä—Ç –±–∞–ª–∞–Ω—Å–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω! ---');
    console.log(`üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${config.outputDir}`);
    console.log('');
    console.log('üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã');
    console.log('   2. –û–±–Ω–æ–≤–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –∏–≥—Ä–µ');
    console.log('   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
    
  } catch (error) {
    console.error('');
    console.error('üí• --- –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ò–ú–ü–û–†–¢–ï–†–ê ---');
    console.error(error);
    console.error('');
    console.error('üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.error('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ GOOGLE_SHEET_ID –≤ .env —Ñ–∞–π–ª–µ');
    console.error('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ google-credentials.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.error('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ');
    console.error('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ª–∏—Å—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ');
    
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('\n‚èπÔ∏è  –ò–º–ø–æ—Ä—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
  process.exit(0);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ Promise:', reason);
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫
main().catch(err => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
  process.exit(1);
});

