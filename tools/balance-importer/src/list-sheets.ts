/**
 * List all sheets in Google Spreadsheet
 * –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ª–∏—Å—Ç—ã –≤ Google —Ç–∞–±–ª–∏—Ü–µ
 */

import { getSheetsClient } from './google';
import { config } from './config';

async function listAllSheets() {
  console.log('üîç --- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–∏—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ ---');
  console.log(`üìä –¢–∞–±–ª–∏—Ü–∞: ${config.spreadsheetId}`);
  console.log('');

  try {
    const sheets = await getSheetsClient();
    
    const response = await sheets.spreadsheets.get({
      spreadsheetId: config.spreadsheetId!,
    });
    
    const spreadsheet = response.data;
    console.log(`üìã –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: "${spreadsheet.properties?.title}"`);
    console.log('');
    
    if (spreadsheet.sheets && spreadsheet.sheets.length > 0) {
      console.log('üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã:');
      spreadsheet.sheets.forEach((sheet, index) => {
        const properties = sheet.properties;
        console.log(`   ${index + 1}. "${properties?.title}"`);
        console.log(`      ID: ${properties?.sheetId}`);
        console.log(`      –¢–∏–ø: ${properties?.sheetType}`);
        console.log(`      –°—Ç—Ä–æ–∫: ${properties?.gridProperties?.rowCount || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
        console.log(`      –ö–æ–ª–æ–Ω–æ–∫: ${properties?.gridProperties?.columnCount || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
        console.log('');
      });
    } else {
      console.log('‚ùå –õ–∏—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ª–∏—Å—Ç–æ–≤:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
listAllSheets().catch(err => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
  process.exit(1);
});
